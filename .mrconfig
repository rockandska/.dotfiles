##############################################
# DEFAULT
##############################################
[DEFAULT]

# Include defaults libs.
include = cat ~/.local/share/mr/* 2>/dev/null || true

# Include personal libs
include = cat ~/.config/myrepos/lib/* 2>/dev/null || true

lib=
	: ${DOTFILES_REPO:=https://github.com/rockandska/.dotfiles.git}
	: ${DOTFILES_REPO_CHECKOUT:=master}
	: ${MYREPOS_REPO:=git://myrepos.branchable.com/.git}
	: ${MYREPOS_REPO_CHECKOUT:=1.20171231}
	: ${CPANM_REPO:=https://github.com/miyagawa/cpanminus.git}
	: ${CPANM_REPO_CHECKOUT:=App-cpanminus-1.7907}
	: ${STOW_BACKUP_DIR:="${HOME:?}/.cache/stow/backup/$(date +%m-%d-%Y-%Hh%Mm%Ss)"}
	missing() {
		what=${1:=missing name}
		type ${what} 1> /dev/null && return 1 || {
			echo "missing: ${what}" 1>&2
			return 0
		}
	}
	is_stowable() {
		[ -z "$MR_DISABLE_STOW" ] &&
		( cd "$MR_REPO" && mr -t stowable >/dev/null 2>&1 )
	}
	get() {
		local destination=${1:?}
		local src=${2:?}
		local branch=${3:-master}
		case ${src} in
			git://*|*.git)
				git clone -q -b ${branch} ${src} ${destination} || rm -rf ${destination}
				;;
			http://*|https://*|ftp://*)
				wget -q -O ${destination} ${src} || rm -rf ${destination}
				;;
			*)
				mkdir -p $(dirname ${destination}) || rm -rf ${destination}
				cp -r ${src} ${destination} || rm -rf ${destination}
			;;
		esac
	}
	mr_backupstowover () {
		stowable_then_continue || return 0
		set_stow_common_opts
		ensure_package_exists
		re="^  \* existing target (is neither a link nor a directory|is not owned by stow): "
		misstowed_files=$( \
					command "$STOW" -n $stow_common_opts ${STOW_NAME} 3>&1 1>&2 2>&3 \
					| egrep -v "^(mr misstowed.*)?$" \
					| egrep "$re" \
					| sed -r -e "s#$re#$STOW_TARGET/#" \
					| sort \
					| uniq \
				)
		mkdir -p ${STOW_BACKUP_DIR:?}
		for file in ${misstowed_files:-};do
			dest=$(printf '%s' "$file" | sed -e "s@$STOW_TARGET@$MR_REPO@")
			echo "Backing up ${file:?} into ${STOW_BACKUP_DIR:?}${file:?} before stow !"
			cp -L --parents ${file:?} ${STOW_BACKUP_DIR:?}
			echo "Deleting ${file:?}"
			rm ${file:?}
		done
		echo "Stowing......."
		command "$STOW" $stow_common_opts ${STOW_NAME}
	}

# Alias commands
backupstowover = mr_backupstowover "$@"

# Include repositories config
include = cat ~/.config/myrepos/conf.d/* 2>/dev/null || true

##############################################
# #1
# MYREPOS
##############################################

[${HOME}/.local/src/myrepos]
order = 1
lib =
	build() {
		cd $MR_REPO 2>&1
		make install PREFIX=~/.local
	}
checkout =
	get ${MR_REPO:?} ${MYREPOS_REPO:?} || rm -rf ${MR_REPO:?}
	cd ${MR_REPO:?}
	git checkout ${MYREPOS_REPO_CHECKOUT:?}
fixups =
	build
skip =
	[ ${MR_ACTION} != "status" ] \
        && ! missing mr

##############################################
# #2
# CPANM
# + STOW
##############################################

[${HOME}/.local/src/cpanm]
order = 2
lib =
	build() {
		cd ${MR_REPO:?}
		cat App-cpanminus/cpanm | perl - App::cpanminus
		cpanm IO::Scalar
		cpanm Stow
	}
checkout =
	get ${MR_REPO:?} ${CPANM_REPO} || rm -rf ${MR_REPO:?}
	cd ${MR_REPO:?}
	git checkout ${CPANM_REPO_CHECKOUT}
fixups =
	build
skip =
        [ ${MR_ACTION} != "status" ] \
        && ! missing cpanm

##############################################
# #3
# DEFAULT DOTFILES
##############################################

[${HOME}/.local/src/dotfiles]
order = 3
stowable = true
pre_checkout = 
	grep -qF -- "${MR_REPO}/.mrconfig" "${HOME}/.mrtrust" || echo "${MR_REPO}/.mrconfig" >> "${HOME}/.mrtrust"
checkout =
	get ${MR_REPO:?} ${DOTFILES_REPO:?} || rm -rf ${MR_REPO:?}
	cd ${MR_REPO:?}
	git checkout ${DOTFILES_REPO_CHECKOUT:?}
fixups =
	command -v vim && vim +PlugUpdate +qall! || true
